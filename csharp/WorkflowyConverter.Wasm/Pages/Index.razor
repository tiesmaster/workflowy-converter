@page "/"

<PageTitle>Workflowy Converter</PageTitle>

@if (_rootNodes is null)
{
    <InputFile id="fileInput" OnChange="UploadFilesAsync" hidden />

    <MudButton HtmlTag="label"
           Variant="Variant.Filled"
           Color="Color.Primary"
           StartIcon="@Icons.Filled.CloudUpload"
           for="fileInput">
        Upload Files
    </MudButton>
}
else
{
    <MudGrid Spacing="10" Justify="Justify.Center">
        <MudItem xs="6">
            <MudTreeView T="WorkflowyNode" @bind-SelectedValue="_selectedNode" Hover="true" Items="@_rootNodes">
                <ItemTemplate>
                    <MudTreeViewItem Value="@context" Text="@context.Todo" Items="@(context.Children?.ToHashSet())" Expanded="true">
                    </MudTreeViewItem>
                </ItemTemplate>
            </MudTreeView>
        </MudItem>
        <MudItem xs="6">
            <p>@Opml</p>
        </MudItem>
    </MudGrid>
}

@code
{
    private string? _text;
    private HashSet<WorkflowyNode>? _rootNodes;
    private WorkflowyNode? _selectedNode;

    private async Task UploadFilesAsync(InputFileChangeEventArgs e)
    {
        var stream = e.File.OpenReadStream(maxAllowedSize: 2_000_000);
        var rootNodes = await WorkflowyNode.ReadFromAsync(stream);
        _rootNodes = rootNodes.ToHashSet();
    }

    public string? Opml => _selectedNode?.ToOpmlDocument().ToString();
}